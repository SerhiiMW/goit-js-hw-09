{"mappings":"AAEA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,yBAC/BE,MAAOH,SAASC,cAAc,uBAC9BG,KAAMJ,SAASC,cAAc,sBAC7BI,OAAQL,SAASC,cAAc,yBA+BjC,SAASK,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,QAAUC,YAAW,KACfJ,EACFF,EAAQ,C,SAAEF,E,MAAUJ,IAEpBO,EAAO,C,SAAEH,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CArCbL,EAAKC,KAAKiB,iBAAiB,UAE3B,SAA2BC,GACzB,IAAIC,EAAI,EAGJC,EAAW,EAEfF,EAAEG,iBACF,MAAMf,EAASgB,OAAOvB,EAAKO,OAAOiB,OAE5BC,GADOF,OAAOvB,EAAKM,KAAKkB,OAChBD,OAAOvB,EAAKK,MAAMmB,QAChC,KAAQJ,EAAIb,EAAQa,GAAK,EACvBC,GAAY,EAEZb,EAAca,EAAUI,GACrBC,MAAK,EAACjB,SAAEA,EAAQJ,MAAEA,MAEfsB,QAAMC,IAAI,uBAAqBnB,QAAiBJ,MAAU,IAE7DwB,OAAM,EAACpB,SAAEA,EAAQJ,MAAEA,MAEhBsB,QAAMC,IAAI,sBAAoBnB,QAAeJ,MAAU,IAG/DgB,EAAW,EACXD,EAAI,C","sources":["src/js/03-promises.js"],"sourcesContent":["// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  button: document.querySelector('button[type=\"submit\"]'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', startPromiseGener);\n\nfunction startPromiseGener(e) {\n  let i = 0;\n  // const amount = 0;\n  // const step = 0;\n  let position = 0;\n  // const delay = 0;\n  e.preventDefault();\n  const amount = Number(refs.amount.value);\n  const step = Number(refs.step.value);\n  const delay = Number(refs.delay.value);\n  for (i; i < amount; i += 1) {\n    position += 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        // Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        // Notify.success(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  position = 0;\n  i = 0;\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    timerId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$47d4ff9957288465$var$refs","form","document","querySelector","button","delay","step","amount","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","timerId","setTimeout","addEventListener","e","i","position1","preventDefault","Number","value","delay1","then","console","log","catch"],"version":3,"file":"03-promises.6ff386f2.js.map"}